BEGIN TRANSACTION;
CREATE TABLE UnidadesMedidas (
	UnidadMedidaID	INTEGER NOT NULL PRIMARY KEY IDENTITY(1,1),
	Codigo	VARCHAR(10) NOT NULL,
	UnidadMedida	VARCHAR(100) NOT NULL,
	PorDefecto	INTEGER NOT NULL DEFAULT 0
);
CREATE TABLE Transacciones (
	TransaccionID	INTEGER NOT NULL PRIMARY KEY IDENTITY(1,1),
	Transaccion	VARCHAR(100) NOT NULL,
	Codigo	VARCHAR(10) NOT NULL
);
SET IDENTITY_INSERT Transacciones ON;
INSERT INTO Transacciones (TransaccionID,Transaccion,Codigo) VALUES (1,'Apertura','AP'),
 (2,'Venta','VT'),
 (3,'Devolucion','DV'),
 (4,'Cierre','CI');
SET IDENTITY_INSERT Transacciones OFF;
CREATE TABLE TiposProductos (
	TipoProductoID	INTEGER NOT NULL PRIMARY KEY IDENTITY(1,1),
	TipoProducto	VARCHAR(100) NOT NULL
);
CREATE TABLE TiposDocumentos (
	TipoDocumentoID	INTEGER NOT NULL PRIMARY KEY IDENTITY(1,1),
	Codigo	VARCHAR(10) NOT NULL,
	TipoDocumento	VARCHAR(100) NOT NULL,
	Iniciales	VARCHAR(10) NOT NULL
);
CREATE TABLE Paises (
	PaisID	INTEGER NOT NULL PRIMARY KEY IDENTITY(1,1),
	Codigo	VARCHAR(10) NOT NULL,
	Pais	VARCHAR(100) NOT NULL
);
SET IDENTITY_INSERT Paises ON;
INSERT INTO Paises (PaisID,Codigo,Pais) VALUES (1,'AF','AFGHANISTAN'),
 (2,'AL','ALBANIA'),
 (3,'DZ','ALGERIA'),
 (4,'AS','AMERICAN SAMOA'),
 (5,'AD','ANDORRA'),
 (6,'AO','ANGOLA'),
 (7,'AI','ANGUILLA'),
 (8,'AQ','ANTARCTICA'),
 (9,'AG','ANTIGUA AND BARBUDA'),
 (10,'AR','ARGENTINA'),
 (11,'AM','ARMENIA'),
 (12,'AW','ARUBA'),
 (13,'AU','AUSTRALIA'),
 (14,'AT','AUSTRIA'),
 (15,'AZ','AZERBAIJAN'),
 (16,'BS','BAHAMAS'),
 (17,'BH','BAHRAIN'),
 (18,'BD','BANGLADESH'),
 (19,'BB','BARBADOS'),
 (20,'BY','BELARUS'),
 (21,'BE','BELGIUM'),
 (22,'BZ','BELIZE'),
 (23,'BJ','BENIN'),
 (24,'BM','BERMUDA'),
 (25,'BT','BHUTAN'),
 (26,'BO','BOLIVIA'),
 (27,'BA','BOSNIA AND HERZEGOVINA'),
 (28,'BW','BOTSWANA'),
 (29,'BV','BOUVET ISLAND'),
 (30,'BR','BRAZIL'),
 (31,'IO','BRITISH INDIAN OCEAN TERRITORY'),
 (32,'BN','BRUNEI DARUSSALAM'),
 (33,'BG','BULGARIA'),
 (34,'BF','BURKINA FASO'),
 (35,'BI','BURUNDI'),
 (36,'KH','CAMBODIA'),
 (37,'CM','CAMEROON'),
 (38,'CA','CANADA'),
 (39,'CV','CAPE VERDE'),
 (40,'KY','CAYMAN ISLANDS'),
 (41,'CF','CENTRAL AFRICAN REPUBLIC'),
 (42,'TD','CHAD'),
 (43,'CL','CHILE'),
 (44,'CN','CHINA'),
 (45,'CX','CHRISTMAS ISLAND'),
 (46,'CC','COCOS (KEELING) ISLANDS'),
 (47,'CO','COLOMBIA'),
 (48,'KM','COMOROS'),
 (49,'CG','CONGO'),
 (50,'CK','COOK ISLANDS'),
 (51,'CR','COSTA RICA'),
 (52,'CI','COTE D’IVOIRE'),
 (53,'HR','CROATIA'),
 (54,'CU','CUBA'),
 (55,'CY','CYPRUS'),
 (56,'CZ','CZECH REPUBLIC'),
 (57,'DK','DENMARK'),
 (58,'DJ','DJIBOUTI'),
 (59,'DM','DOMINICA'),
 (60,'DO','DOMINICAN REPUBLIC'),
 (61,'TP','EAST TIMOR'),
 (62,'EC','ECUADOR'),
 (63,'EG','EGYPT'),
 (64,'SV','EL SALVADOR'),
 (65,'GQ','EQUATORIAL GUINEA'),
 (66,'ER','ERITREA'),
 (67,'EE','ESTONIA'),
 (68,'ET','ETHIOPIA'),
 (69,'FK','FALKLAND ISLANDS (MALVINAS)'),
 (70,'FO','FAROE ISLANDS'),
 (71,'FJ','FIJI'),
 (72,'FI','FINLAND'),
 (73,'FR','FRANCE'),
 (74,'FX','FRANCE, METROPOLITAN'),
 (75,'GF','FRENCH GUIANA'),
 (76,'PF','FRENCH POLYNESIA'),
 (77,'TF','FRENCH SOUTHERN TERRITORIES'),
 (78,'GA','GABON'),
 (79,'GM','GAMBIA'),
 (80,'GE','GEORGIA'),
 (81,'DE','GERMANY'),
 (82,'GH','GHANA'),
 (83,'GI','GIBRALTAR'),
 (84,'GR','GREECE'),
 (85,'GL','GREENLAND'),
 (86,'GD','GRENADA'),
 (87,'GP','GUADELOUPE'),
 (88,'GU','GUAM'),
 (89,'GT','GUATEMALA'),
 (90,'GN','GUINEA'),
 (91,'GW','GUINEA-BISSAU'),
 (92,'GY','GUYANA'),
 (93,'HT','HAITI'),
 (94,'HM','HEARD ISLAND AND MC DONALD ISLANDS'),
 (95,'HN','HONDURAS'),
 (96,'HK','HONG KONG'),
 (97,'HU','HUNGARY'),
 (98,'IS','ICELAND'),
 (99,'IN','INDIA'),
 (100,'ID','INDONESIA'),
 (101,'IR','IRAN (ISLAMIC REPUBLIC OF)'),
 (102,'IQ','IRAQ'),
 (103,'IE','IRELAND'),
 (104,'IL','ISRAEL'),
 (105,'IT','ITALY'),
 (106,'JM','JAMAICA'),
 (107,'JP','JAPAN'),
 (108,'JO','JORDAN'),
 (109,'KZ','KAZAKHSTAN'),
 (110,'KE','KENYA'),
 (111,'KI','KIRIBATI'),
 (112,'KP','KOREA, DEMOCRATIC PEOPLE’S REPUBLIC'),
 (113,'OF','KR KOREA, REPUBLIC OF'),
 (114,'KW','KUWAIT'),
 (115,'KG','KYRGYZSTAN'),
 (116,'LA','LAO PEOPLE’S DEMOCRATIC REPUBLIC'),
 (117,'LV','LATVIA'),
 (118,'LB','LEBANON'),
 (119,'LS','LESOTHO'),
 (120,'LR','LIBERIA'),
 (121,'LY','LIBYAN ARAB JAMAHIRIYA'),
 (122,'LI','LIECHTENSTEIN'),
 (123,'LT','LITHUANIA'),
 (124,'LU','LUXEMBOURG'),
 (125,'MO','MACAU'),
 (126,'MG','MADAGASCAR'),
 (127,'MW','MALAWI'),
 (128,'MY','MALAYSIA'),
 (129,'MV','MALDIVES'),
 (130,'ML','MALI'),
 (131,'MT','MALTA'),
 (132,'MH','MARSHALL ISLANDS'),
 (133,'MQ','MARTINIQUE'),
 (134,'MR','MAURITANIA'),
 (135,'MU','MAURITIUS'),
 (136,'YT','MAYOTTE'),
 (137,'MX','MEXICO'),
 (138,'FM','MICRONESIA, FEDERATED STATES OF'),
 (139,'MD','MOLDOVA, REPUBLIC OF'),
 (140,'MC','MONACO'),
 (141,'MN','MONGOLIA'),
 (142,'MS','MONTSERRAT'),
 (143,'MA','MOROCCO'),
 (144,'MZ','MOZAMBIQUE'),
 (145,'MM','MYANMAR'),
 (146,'NA','NAMIBIA'),
 (147,'NR','NAURU'),
 (148,'NP','NEPAL'),
 (149,'AN','NETHERLANDS ANTILLES'),
 (150,'NL','NETHERLANDS'),
 (151,'NC','NEW CALEDONIA'),
 (152,'NZ','NEW ZEALAND'),
 (153,'NI','NICARAGUA'),
 (154,'NE','NIGER'),
 (155,'NG','NIGERIA'),
 (156,'NU','NIUE'),
 (157,'NF','NORFOLK ISLAND'),
 (158,'MP','NORTHERN MARIANA ISLANDS'),
 (159,'NO','NORWAY'),
 (160,'OM','OMAN'),
 (161,'PK','PAKISTAN'),
 (162,'PW','PALAU'),
 (163,'PA','PANAMA'),
 (164,'PG','PAPUA NEW GUINEA'),
 (165,'PY','PARAGUAY'),
 (166,'PE','PERU'),
 (167,'PH','PHILIPPINES'),
 (168,'PN','PITCAIRN'),
 (169,'PL','POLAND'),
 (170,'PT','PORTUGAL'),
 (171,'PR','PUERTO RICO'),
 (172,'QA','QATAR'),
 (173,'RE','REUNION'),
 (174,'RO','ROMANIA'),
 (175,'RU','RUSSIAN FEDERATION'),
 (176,'RW','RWANDA'),
 (177,'SH','SAINT HELENA'),
 (178,'KN','SAINT KITTS AND NEVIS'),
 (179,'LC','SAINT LUCIA'),
 (180,'PM','SAINT PIERRE AND MIQUELON'),
 (181,'VC','SAINT VINCENT AND THE GRENADINES'),
 (182,'WS','SAMOA'),
 (183,'SM','SAN MARINO'),
 (184,'SA','SAUDI ARABIA'),
 (185,'SN','SENEGAL'),
 (186,'SC','SEYCHELLES'),
 (187,'SL','SIERRA LEONE'),
 (188,'SG','SINGAPORE'),
 (189,'SK','SLOVAKIA'),
 (190,'SI','SLOVENIA'),
 (191,'SB','SOLOMON ISLANDS'),
 (192,'SO','SOMALIA'),
 (193,'ZA','SOUTH AFRICA'),
 (194,'GS','SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS'),
 (195,'ES','SPAIN'),
 (196,'LK','SRI LANKA'),
 (197,'SD','SUDAN'),
 (198,'SR','SURINAME'),
 (199,'SJ','SVALBARD AND JAN MAYEN ISLANDS'),
 (200,'SZ','SWAZILAND'),
 (201,'SE','SWEDEN'),
 (202,'CH','SWITZERLAND'),
 (203,'SY','SYRIAN ARAB REPUBLIC'),
 (204,'ST','SÃO TOME AND PRINCIPE'),
 (205,'TW','TAIWAN, PROVINCE OF CHINA'),
 (206,'TJ','TAJIKISTAN'),
 (207,'TZ','TANZANIA, UNITED REPUBLIC OF'),
 (208,'TH','THAILAND'),
 (209,'MK','THE FORMER YUGOSLAV REPUBLIC OF MACEDONIA'),
 (210,'TG','TOGO'),
 (211,'TK','TOKELAU'),
 (212,'TO','TONGA'),
 (213,'TT','TRINIDAD AND TOBAGO'),
 (214,'TN','TUNISIA'),
 (215,'TR','TURKEY'),
 (216,'TM','TURKMENISTAN'),
 (217,'TC','TURKS AND CAICOS ISLANDS'),
 (218,'TV','TUVALU'),
 (219,'UG','UGANDA'),
 (220,'UA','UKRAINE'),
 (221,'AE','UNITED ARAB EMIRATES'),
 (222,'GB','UNITED KINGDOM'),
 (223,'UM','UNITED STATES MINOR OUTLYING ISLANDS'),
 (224,'US','UNITED STATES'),
 (225,'UY','URUGUAY'),
 (226,'UZ','UZBEKISTAN'),
 (227,'VU','VANUATU'),
 (228,'VA','VATICAN CITY STATE (HOLY SEE)'),
 (229,'VE','VENEZUELA'),
 (230,'VN','VIET NAM'),
 (231,'VG','VIRGIN ISLANDS (BRITISH)'),
 (232,'VI','VIRGIN ISLANDS (U.S.)'),
 (233,'WF','WALLIS AND FUTUNA ISLANDS'),
 (234,'EH','WESTERN SAHARA'),
 (235,'YE','YEMEN'),
 (236,'YU','YUGOSLAVIA'),
 (237,'ZR','ZAIRE'),
 (238,'ZM','ZAMBIA'),
 (239,'ZW','ZIMBABWE');
SET IDENTITY_INSERT Paises OFF;
CREATE TABLE Departamentos (
	DepartamentoID	INTEGER NOT NULL PRIMARY KEY IDENTITY(1,1),
	PaisID	INTEGER NOT NULL,
	Departamento	VARCHAR(100) NOT NULL,
	UBIGEO	VARCHAR(10) NOT NULL,
	FOREIGN KEY(PaisID) REFERENCES Paises(PaisID)
);
SET IDENTITY_INSERT Departamentos ON;
INSERT INTO Departamentos (DepartamentoID,PaisID,Departamento,UBIGEO) VALUES (50,166,'DEPARTAMENTO AMAZONAS','01'),
 (51,166,'DEPARTAMENTO ANCASH','02'),
 (52,166,'DEPARTAMENTO APURIMAC','03'),
 (53,166,'DEPARTAMENTO AREQUIPA','04'),
 (54,166,'DEPARTAMENTO AYACUCHO','05'),
 (55,166,'DEPARTAMENTO CAJAMARCA','06'),
 (56,166,'PROV. CONST. DEL CALLAO','07'),
 (57,166,'DEPARTAMENTO CUSCO','08'),
 (58,166,'DEPARTAMENTO HUANCAVELICA','09'),
 (59,166,'DEPARTAMENTO HUANUCO','10'),
 (60,166,'DEPARTAMENTO ICA','11'),
 (61,166,'DEPARTAMENTO JUNIN','12'),
 (62,166,'DEPARTAMENTO LA LIBERTAD','13'),
 (63,166,'DEPARTAMENTO LAMBAYEQUE','14'),
 (64,166,'DEPARTAMENTO LIMA','15'),
 (65,166,'DEPARTAMENTO LORETO','16'),
 (66,166,'DEPARTAMENTO MADRE DE DIOS','17'),
 (67,166,'DEPARTAMENTO MOQUEGUA','18'),
 (68,166,'DEPARTAMENTO PASCO','19'),
 (69,166,'DEPARTAMENTO PIURA','20'),
 (70,166,'DEPARTAMENTO PUNO','21'),
 (71,166,'DEPARTAMENTO SAN MARTIN','22'),
 (72,166,'DEPARTAMENTO TACNA','23'),
 (73,166,'DEPARTAMENTO TUMBES','24'),
 (74,166,'DEPARTAMENTO UCAYALI','25');
SET IDENTITY_INSERT Departamentos OFF;
CREATE TABLE Provincias (
	ProvinciaID	INTEGER NOT NULL PRIMARY KEY IDENTITY(1,1),
	DepartamentoID	INTEGER NOT NULL,
	Provincia	VARCHAR(100) NOT NULL,
	UBIGEO	VARCHAR(10) NOT NULL,
	FOREIGN KEY(DepartamentoID) REFERENCES Departamentos(DepartamentoID)
);
CREATE TABLE Distritos (
	DistritoID	INTEGER NOT NULL PRIMARY KEY IDENTITY(1,1),
	ProvinciaID	INTEGER NOT NULL,
	Distrito	VARCHAR(100) NOT NULL,
	UBIGEO	VARCHAR(10) NOT NULL,
	FOREIGN KEY(ProvinciaID) REFERENCES Provincias(ProvinciaID)
);
CREATE TABLE Impuestos (
	ImpuestoID	INTEGER NOT NULL PRIMARY KEY IDENTITY(1,1),
	Impuesto	VARCHAR(100) NOT NULL,
	Codigo	VARCHAR(10) NOT NULL,
	Categoria	VARCHAR(100) NOT NULL,
	Tasa	REAL NOT NULL DEFAULT 0,
	ValidoDesde	DATE NOT NULL,
	ValidoHasta	DATE,
	Activo	INTEGER NOT NULL DEFAULT 1
);
CREATE TABLE Marcas (
	MarcaID	INTEGER NOT NULL PRIMARY KEY IDENTITY(1,1),
	Marca	VARCHAR(100) NOT NULL
);
CREATE TABLE Productos (
	ProductoID	INTEGER NOT NULL PRIMARY KEY IDENTITY(1,1),
	Codigo	VARCHAR(10) NOT NULL,
	CodigoBarra	VARCHAR(50),
	Producto	VARCHAR(100) NOT NULL,
	TipoProductoID	INTEGER,
	MarcaID	INTEGER,
	ImpuestoID	INTEGER NOT NULL,
	UnidadMedidaID	INTEGER NOT NULL,
	Presentacion	VARCHAR(100),
	FOREIGN KEY(UnidadMedidaID) REFERENCES UnidadesMedidas(UnidadMedidaID),
	FOREIGN KEY(ImpuestoID) REFERENCES Impuestos(ImpuestoID),
	FOREIGN KEY(TipoProductoID) REFERENCES TiposProductos(TipoProductoID),
	FOREIGN KEY(MarcaID) REFERENCES Marcas(MarcaID)
);
CREATE TABLE Identificaciones (
	IdentificacionID	INTEGER NOT NULL PRIMARY KEY IDENTITY(1,1),
	Codigo	VARCHAR(10) NOT NULL,
	Identificacion	VARCHAR(100) NOT NULL,
	Iniciales	VARCHAR(10) NOT NULL
);
SET IDENTITY_INSERT Identificaciones ON;
INSERT INTO Identificaciones (IdentificacionID,Codigo,Identificacion,Iniciales) VALUES (1,'0','DOC.TRIB.NO.DOM.SIN.RUC','S/R'),
 (2,'1','DOC. NACIONAL DE IDENTIDAD','DNI'),
 (3,'4','CARNET DE EXTRANJERIA','CDE'),
 (4,'6','REG. UNICO DE CONTRIBUYENTES','RUC'),
 (5,'7','PASAPORTE','PAS'),
 (6,'A','CED. DIPLOMATICA DE IDENTIDAD','CDI'),
 (7,'B','DOC.IDENT.PAIS.RESIDENCIA-NO.D','NOD'),
 (8,'C','TAX IDENTIFICATION NUMBER','TIN'),
 (9,'D','IDENTIFICATION NUMBER','INU');
SET IDENTITY_INSERT Identificaciones OFF;
CREATE TABLE Empresas (
	EmpresaID	INTEGER NOT NULL PRIMARY KEY IDENTITY(1,1),
	IdentificacionID	INTEGER NOT NULL,
	NroDocIdent	VARCHAR(10) NOT NULL,
	NombreComercial	VARCHAR(100),
	RazonSocial	VARCHAR(100) NOT NULL,
	Direccion	VARCHAR(255) NOT NULL,
	DistritoID	INTEGER,
	Urbanizacion	VARCHAR(100),
	NroTelefonico	VARCHAR(100),
	CorreoElectronico	VARCHAR(255),
	FOREIGN KEY(IdentificacionID) REFERENCES Identificaciones(IdentificacionID),
	FOREIGN KEY(DistritoID) REFERENCES Distritos(DistritoID)
);
CREATE TABLE Clientes (
	ClienteID	INTEGER NOT NULL PRIMARY KEY IDENTITY(1,1),
	IdentificacionID	INTEGER NOT NULL,
	NroDocIdent	VARCHAR(100) NOT NULL,
	Nombre	VARCHAR(100) NOT NULL,
	Direccion	VARCHAR(255),
	PaisID	INTEGER,
	DistritoID	INTEGER,
	NroTelefonico	VARCHAR(100),
	CorreoElectronico	VARCHAR(255),
	FOREIGN KEY(IdentificacionID) REFERENCES Identificaciones(IdentificacionID),
	FOREIGN KEY(DistritoID) REFERENCES Distritos(DistritoID),
	FOREIGN KEY(PaisID) REFERENCES Paises(PaisID)
);
CREATE TABLE Empleados (
	EmpleadoID	INTEGER NOT NULL PRIMARY KEY IDENTITY(1,1),
	IdentificacionID	INTEGER NOT NULL,
	NroDocIdent	VARCHAR(10) NOT NULL,
	Nombre	VARCHAR(100) NOT NULL,
	Direccion	VARCHAR(255),
	Telefono	VARCHAR(100),
	CorreoElectronico	VARCHAR(255),
	Login	VARCHAR(20) NOT NULL,
	PasswdHash	varbinary(255) NOT NULL,
	EsSupervisor	BIT NOT NULL DEFAULT 0,
	EsAdministrador	BIT NOT NULL DEFAULT 0
);
SET IDENTITY_INSERT Empleados ON;
INSERT INTO Empleados (EmpleadoID,IdentificacionID,NroDocIdent,Nombre,Direccion,Telefono,CorreoElectronico,Login,PasswdHash,EsSupervisor,EsAdministrador) VALUES (2,7,'V-5591873','Víctor Ernesto Suárez Cortés',NULL,NULL,NULL,'VSUAREZ',CAST('8D969EEF6ECAD3C29A3A629280E686CF0C3F5D5A86AFF3CA12020C923ADC6C92' AS VARBINARY(255)),0,1);
SET IDENTITY_INSERT Empleados OFF;
-- NO TIENE IDENTITY PORQUE ES UN REGISTRO ÚNICO POR CADA BASE DE DATOS
CREATE TABLE Cajas (
	CajaID	INTEGER NOT NULL,
	Descripcion	VARCHAR(100) NOT NULL,
	Abierta	BIT NOT NULL DEFAULT 0,
	FechaHoraEstado	DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY(CajaID)
);
INSERT INTO Cajas (CajaID,Descripcion,Abierta,FechaHoraEstado) VALUES (1,'CAJA #1',0,'2018-10-27 21:24:19');
CREATE TABLE Documentos (
	DocumentoID	INTEGER NOT NULL PRIMARY KEY IDENTITY(1,1),
	NroDocumento	INTEGER NOT NULL,
	TipoDocumentoID	INTEGER NOT NULL,
	FechaDocumento	DATE NOT NULL DEFAULT CAST(GETDATE() AS DATE),
	HoraDocumento	TIME NOT NULL DEFAULT CAST(GETDATE() AS TIME),
	EmpresaID	INTEGER NOT NULL,
	ClienteID	INTEGER NOT NULL,
	EmpleadoID	INTEGER NOT NULL,
	CajaID	INTEGER NOT NULL,
	TotalProductos	INTEGER NOT NULL DEFAULT 0,
	MontoBruto	MONEY NOT NULL DEFAULT 0,
	MontoGravado	MONEY NOT NULL DEFAULT 0,
	MontoImpuestos	MONEY NOT NULL DEFAULT 0,
	MontoExcento	MONEY NOT NULL DEFAULT 0,
	SubTotal	MONEY NOT NULL DEFAULT 0,
	MontoDescuentos	MONEY NOT NULL DEFAULT 0,
	MontoNeto	MONEY NOT NULL DEFAULT 0,
	FOREIGN KEY(EmpresaID) REFERENCES Empresas(EmpresaID),
	FOREIGN KEY(ClienteID) REFERENCES Clientes(ClienteID),
	FOREIGN KEY(EmpleadoID) REFERENCES Empleados(EmpleadoID),
	FOREIGN KEY(CajaID) REFERENCES Cajas(CajaID),
	FOREIGN KEY(TipoDocumentoID) REFERENCES TiposDocumentos(TipoDocumentoID)
);
CREATE TABLE FormasPagos (
	FormaPagoID	INTEGER NOT NULL PRIMARY KEY IDENTITY(1,1),
	FormaPago	VARCHAR(100) NOT NULL,
	Codigo	VARCHAR(10) NOT NULL,
	Orden	INTEGER NOT NULL DEFAULT 0,
	RequiereAutorizacion	INTEGER NOT NULL DEFAULT 0 CHECK(RequiereAutorizacion = 0 OR RequiereAutorizacion = 1)
);
CREATE TABLE Monedas (
	MonedaID	INTEGER NOT NULL PRIMARY KEY IDENTITY(1,1),
	Codigo	VARCHAR(10) NOT NULL,
	Moneda	VARCHAR(100) NOT NULL,
	PorDefecto	INTEGER NOT NULL DEFAULT 0,
	Base	INTEGER NOT NULL DEFAULT 0,
	FactorDeCambio	REAL NOT NULL DEFAULT 1
);
CREATE TABLE Pagos (
	PagoID	INTEGER NOT NULL PRIMARY KEY IDENTITY(1,1),
	DocumentoID	INTEGER NOT NULL,
	FormaPagoID	INTEGER NOT NULL,
	MonedaID	INTEGER NOT NULL,
	MontoPago	MONEY NOT NULL DEFAULT 0,
	BancoID	INTEGER,
	NroDocPago	VARCHAR,
	Autorizacion	VARCHAR,
	FOREIGN KEY(DocumentoID) REFERENCES Documentos(DocumentoID),
	FOREIGN KEY(FormaPagoID) REFERENCES FormasPagos(FormaPagoID),
	FOREIGN KEY(MonedaID) REFERENCES Monedas(MonedaID)
);
CREATE TABLE ItemsDocumentos (
	DocumentoID	INTEGER NOT NULL,
	ItemID	INTEGER NOT NULL,
	ProductoID	INTEGER NOT NULL,
	MontoUnitario	MONEY NOT NULL DEFAULT 0,
	Cantidad	INTEGER NOT NULL DEFAULT 1,
	ImpuestoID	INTEGER NOT NULL,
	TasaImpuesto	REAL NOT NULL DEFAULT 0,
	MontoImpuesto	MONEY NOT NULL DEFAULT 0,
	MontoNeto	MONEY NOT NULL DEFAULT 0,
	EsDevolucion	INTEGER NOT NULL DEFAULT 0 CHECK(EsDevolucion = 0 OR EsDevolucion = 1),
	AutorizadoPor	INTEGER,
	FechaHoraAutorizado	VARCHAR,
	FOREIGN KEY(ProductoID) REFERENCES Productos(ProductoID),
	PRIMARY KEY(DocumentoID,ItemID),
	FOREIGN KEY(DocumentoID) REFERENCES Documentos(DocumentoID),
	FOREIGN KEY(AutorizadoPor) REFERENCES Empleados(EmpleadoID),
	FOREIGN KEY(ImpuestoID) REFERENCES Impuestos(ImpuestoID)
);
CREATE TABLE EmpresasEmpleados (
	EmpresaID	INTEGER NOT NULL,
	EmpleadoID	INTEGER NOT NULL,
	PRIMARY KEY(EmpresaID,EmpleadoID),
	FOREIGN KEY(EmpleadoID) REFERENCES Empleados(EmpleadoID),
	FOREIGN KEY(EmpresaID) REFERENCES Empresas(EmpresaID)
);
CREATE TABLE EmpresasClientes (
	EmpresaID	INTEGER NOT NULL,
	ClienteID	INTEGER NOT NULL,
	FOREIGN KEY(ClienteID) REFERENCES Clientes(ClienteID),
	PRIMARY KEY(EmpresaID,ClienteID),
	FOREIGN KEY(EmpresaID) REFERENCES Empresas(EmpresaID)
);
CREATE TABLE Configuraciones (
	ConfiguracionID	INTEGER NOT NULL PRIMARY KEY IDENTITY(1,1),
	CajaID	INTEGER NOT NULL,
	Configuracion	VARCHAR(100) NOT NULL,
	Valor	VARCHAR(100) NOT NULL
);
CREATE TABLE CajaLog (
	CajaLogID	INTEGER NOT NULL PRIMARY KEY IDENTITY(1,1),
	CajaID	INTEGER NOT NULL,
	TransaccionID	INTEGER NOT NULL,
	EmpleadoID	INTEGER NOT NULL,
	Monto	INTEGER NOT NULL DEFAULT 0,
	Fecha	DATE NOT NULL DEFAULT CAST(GETDATE() AS DATE),
	Hora	TIME NOT NULL DEFAULT CAST(GETDATE() AS TIME),
	FOREIGN KEY(TransaccionID) REFERENCES Transacciones(TransaccionID),
	FOREIGN KEY(CajaID) REFERENCES Cajas(CajaID),
	FOREIGN KEY(EmpleadoID) REFERENCES Empleados(EmpleadoID)
);
CREATE UNIQUE INDEX AUK_Productos_Producto ON Productos (
	Producto	ASC
);
CREATE UNIQUE INDEX AUK_Productos_Codigo ON Productos (
	Codigo	ASC
);
CREATE UNIQUE INDEX AUK_Monedas_Moneda ON Monedas (
	Moneda	ASC
);
CREATE UNIQUE INDEX AUK_Monedas_Codigo ON Monedas (
	Codigo	ASC
);
CREATE UNIQUE INDEX AUK_Marcas_Marca ON Marcas (
	Marca	ASC
);
CREATE UNIQUE INDEX AUK_Impuestos_Impuesto ON Impuestos (
	Impuesto	ASC
);
CREATE UNIQUE INDEX AUK_Impuestos_Codigo ON Impuestos (
	Codigo	ASC
);
CREATE UNIQUE INDEX AUK_Identificaciones_Identificacion ON Identificaciones (
	Identificacion	ASC
);
CREATE UNIQUE INDEX AUK_Identificaciones_Codigo ON Identificaciones (
	Codigo	ASC
);
CREATE UNIQUE INDEX AUK_FormasPagos_Orden ON FormasPagos (
	Orden	ASC
);
CREATE UNIQUE INDEX AUK_FormasPagos_FormaPago ON FormasPagos (
	FormaPago	ASC
);
CREATE UNIQUE INDEX AUK_FormasPagos_Codigo ON FormasPagos (
	Codigo	ASC
);
CREATE UNIQUE INDEX AUK_Empresas_ID ON Empresas (
	IdentificacionID	ASC,
	NroDocIdent	ASC
);
CREATE UNIQUE INDEX AUK_Empleados_Login ON Empleados (
	Login	ASC
);
CREATE UNIQUE INDEX AUK_Empleados_ID ON Empleados (
	IdentificacionID	ASC,
	NroDocIdent	ASC
);
CREATE UNIQUE INDEX AUK_Documentos_NroDocumento_EmpresaID ON Documentos (
	NroDocumento	ASC,
	EmpresaID	ASC
);
CREATE UNIQUE INDEX AUK_Distritos_UBIGEO ON Distritos (
	UBIGEO	ASC
);
CREATE UNIQUE INDEX AUK_Distritos_Distrito ON Distritos (
	Distrito	ASC
);
CREATE UNIQUE INDEX AUK_Departamentos_UBIGEO ON Departamentos (
	UBIGEO	ASC
);
CREATE UNIQUE INDEX AUK_Departamentos_Departamento ON Departamentos (
	Departamento	ASC
);
CREATE UNIQUE INDEX AUK_Clientes_ID ON Clientes (
	IdentificacionID	ASC,
	NroDocIdent	ASC
);
CREATE INDEX AK_Productos_TipoProductoID ON Productos (
	TipoProductoID	ASC
);
CREATE INDEX AK_Productos_MarcaID ON Productos (
	MarcaID	ASC
);
CREATE INDEX AK_Productos_ImpuestoID ON Productos (
	ImpuestoID	ASC
);
CREATE INDEX AK_Pagos_MonedaID ON Pagos (
	MonedaID	ASC
);
CREATE INDEX AK_Pagos_FormaPagoID ON Pagos (
	FormaPagoID	ASC
);
CREATE INDEX AK_Pagos_DocumentoID ON Pagos (
	DocumentoID	ASC
);
CREATE INDEX AK_Pagos_BancoID ON Pagos (
	BancoID	ASC
);
CREATE INDEX AK_ItemsDocumentos_ProductoID ON ItemsDocumentos (
	ProductoID	ASC
);
CREATE INDEX AK_ItemsDocumentos_ImpuestoID ON ItemsDocumentos (
	ImpuestoID	ASC
);
CREATE INDEX AK_Documentos_FechaHora ON Documentos (
	FechaDocumento	ASC,
	HoraDocumento	ASC
);
CREATE INDEX AK_Documentos_Empresas_FH ON Documentos (
	EmpresaID	ASC,
	FechaDocumento	ASC,
	HoraDocumento	ASC
);
CREATE INDEX AK_Documentos_Empleados_FH ON Documentos (
	EmpleadoID	ASC,
	FechaDocumento	ASC,
	HoraDocumento	ASC
);
CREATE INDEX AK_Documentos_Clientes_FH ON Documentos (
	ClienteID	ASC,
	FechaDocumento	ASC,
	HoraDocumento	ASC
);
CREATE INDEX AK_Clientes_Nombre ON Clientes (
	Nombre	ASC
);
CREATE INDEX AK_CajasLog_TransaccionID ON CajaLog (
	TransaccionID	ASC
);
CREATE INDEX AK_CajasLog_FH ON CajaLog (
	Fecha	ASC,
	Hora	ASC
);
CREATE INDEX AK_CajasLog_EmpleadoID ON CajaLog (
	EmpleadoID	ASC
);
CREATE INDEX AK_CajasLog_CajaID ON CajaLog (
	CajaID	ASC
);
COMMIT;
SELECT TRANCOUNT  = @@TRANCOUNT;
IF @@TRANCOUNT > 0 ROLLBACK;
